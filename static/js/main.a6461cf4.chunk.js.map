{"version":3,"sources":["Redux/dialogs_reducer.js","Redux/users_reducer.js","API/api.js","assets/images/45.svg","components/Navbar/navbar.module.css","components/Navbar/Navbar.jsx","Redux/auth-reducer.js","components/Header/header.jsx","components/Header/HeaderContainer.jsx","components/login/login.jsx","Redux/app_reducer.js","Redux/redux_store.js","App.js","serviceWorker.js","index.js","components/common/FormControls/FormContols.module.css","components/common/FormControls/FormContols.jsx","utils/validators/validator.js","components/Header/header.module.css","components/Preloader/Preloader.jsx","Redux/profile_reducer.js"],"names":["addMessageActionCreator","newMessage","type","initialState","messagesData","id","message","dialogsData","name","dialogsReducer","state","action","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgres","toggleFollowingProgress","userId","setIsFetching","setTotalUsersCount","setCurrentPage","followSuccess","unFollowSuccess","setUsers","followUnfollowFlow","dispatch","apimethod","ac","a","data","resultCode","getUsers","usersApi","response","items","totalCount","follow","bind","unFollow","usersReducer","map","u","followed","filter","instance","axios","withCredentials","baseURL","headers","get","then","post","delete","auth","getProfile","console","warn","profileApi","authAPI","me","login","email","password","rememberMe","logout","getStatus","updateStatus","status","put","module","exports","Navbar","className","s","nav","item","activeClassName","activeLink","to","SET_USER_DATA","isAuth","setAuthUserData","payload","authReducer","Header","props","header","src","alt","loginBlock","onClick","HeaderContainer","this","React","Component","connect","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Input","validate","required","error","formSummaryError","messages","length","stopSubmit","_error","formData","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","DialogsPage","usersPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","___store____","ProfileContiner","lazy","DialogsContainer","UsersContainer","App","initializeApp","path","render","fallback","Preloader","AppContainer","withRouter","JSAPP","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","Textarea","input","meta","hasError","touched","formControl","value","maxLengthCreator","maxLength","preloader","posts","likesCount","newPostText","profile","addPostActionCreator","setStatus","setUserProfile","newPost"],"mappings":"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","file":"static/js/main.a6461cf4.chunk.js","sourcesContent":["const ADD_MESSAGE = \"ADD-MESSAGE\";\r\nexport const addMessageActionCreator = (newMessage) => ({ type: ADD_MESSAGE,newMessage });\r\n\r\nlet initialState = {\r\n  messagesData: [\r\n    { id: 1, message: \"sdsdsdsd\" },\r\n    { id: 2, message: \"sdsdsdsd\" },\r\n    { id: 3, message: \"sdsdsdsd\" },\r\n    { id: 4, message: \"sdsdsdsd\" },\r\n    { id: 5, message: \"sdsdsdsd\" },\r\n  ],\r\n  dialogsData: [\r\n    { id: 1, name: \"David\" },\r\n    { id: 2, name: \"Andrew\" },\r\n    { id: 3, name: \"Sveta\" },\r\n    { id: 4, name: \"Sasha\" },\r\n    { id: 5, name: \"Valera\" },\r\n  ],\r\n  \r\n};\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE: {\r\n      let newMessage = action.newMessage\r\n      return {\r\n        ...state,\r\n        messagesData: [...state.messagesData, {id:6, message:newMessage}],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dialogsReducer;\r\n","import {\r\n    usersApi\r\n} from \"../API/api\";\r\n// !!! import { updateObjectInArray } from \"../utils/objectHelpers\"; chi stacvel refactoring@\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 50,\r\n    totalUsersCount: 21,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgres: []\r\n\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n              \r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {\r\n                            ...u,\r\n                            followed: true\r\n                        }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n            case UNFOLLOW:\r\n                return {\r\n                    ...state,\r\n                    //!!! users: updateObjectInArray(state.users,action.userId,\"id\",{followed:false})\r\n                    users: state.users.map(u => {\r\n                        if (u.id === action.userId) {\r\n                            return {\r\n                                ...u,\r\n                                followed: false\r\n                            }\r\n                        }\r\n                        return u\r\n                    })\r\n                }\r\n                case SET_USERS: {\r\n                    return {\r\n                        ...state,\r\n                        users: action.users\r\n                    }\r\n                }\r\n                case SET_CURRENT_PAGE: {\r\n                    return {\r\n                        ...state,\r\n                        currentPage: action.currentPage\r\n                    }\r\n                }\r\n                case SET_USERS_TOTAL_COUNT: {\r\n                    return {\r\n                        ...state,\r\n                        totalUsersCount: action.totalUsersCount\r\n                    }\r\n                }\r\n                case TOGGLE_IS_FETCHING: {\r\n                    return {\r\n                        ...state,\r\n                        isFetching: action.isFetching\r\n                    }\r\n                }\r\n                case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n                    return {\r\n                        ...state,\r\n                        followingInProgres: action.followingInProgres ?\r\n                            [...state.followingInProgres, action.userId] :\r\n                            state.followingInProgres.filter(id => id !== action.userId)\r\n\r\n                    }\r\n                }\r\n                default:\r\n                    return state;\r\n    }\r\n};\r\nexport const toggleFollowingProgress = (followingInProgres, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    followingInProgres,\r\n    userId\r\n})\r\nexport const setIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_USERS_TOTAL_COUNT,\r\n    totalUsersCount\r\n});\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n});\r\nexport const followSuccess = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\nexport const unFollowSuccess = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n})\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n})\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apimethod, ac) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let response = await apimethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(ac(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const getUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(setIsFetching(true));\r\n    dispatch(setCurrentPage(currentPage))\r\n    let response = await usersApi.getUsers(currentPage, pageSize)\r\n    dispatch(setUsers(response.items))\r\n    dispatch(setIsFetching(false))\r\n    dispatch(setTotalUsersCount(response.totalCount))\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n        followUnfollowFlow(dispatch,userId,usersApi.follow.bind(usersApi),followSuccess)\r\n    }\r\n\r\nexport const unFollow = (userId) =>  async (dispatch) => {\r\n        followUnfollowFlow(dispatch,userId,usersApi.unFollow.bind(usersApi),unFollowSuccess)\r\n    }\r\n\r\n\r\nexport default usersReducer;\r\n","\r\nimport * as axios from \"axios\"\r\n// const baseUrl = `https://social-network.samuraijs.com/api/1.0/`;\r\n\r\nconst instance = axios.create({\r\n    withCredentials:true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers:{\r\n        \"API-KEY\" : \"560961f6-c212-4142-b02d-d99d0a8308d3\"\r\n      }\r\n})\r\n\r\nexport const usersApi = {\r\n  getUsers(currentPage, pageSize) {\r\n    return instance\r\n      .get(`users?page=${currentPage}&count=${pageSize}`, {\r\n        withCredentials: true,\r\n      })\r\n      .then((response) => response.data);\r\n  },\r\n  follow(userId) {\r\n    return instance.post(`follow/${userId}`);\r\n  },\r\n  unFollow(userId) {\r\n    return instance.delete(`follow/${userId}`);\r\n  },\r\n  auth() {\r\n    return instance.get(`auth/me`);\r\n  },\r\n  getProfile(userId) {\r\n    console.warn(\"Obsolete Method. Please use Profile Api Object\")\r\n    return profileApi.getProfile(userId)\r\n  },\r\n};\r\nexport const authAPI = {\r\n  me(){\r\n    return instance.get(`auth/me`)\r\n  },\r\n  login(email,password,rememberMe = false){\r\n    \r\n    return instance.post(`auth/login` ,{email,password,rememberMe})\r\n  },\r\n  logout(){\r\n    return instance.delete(`auth/login`)\r\n  }\r\n}\r\nexport const profileApi = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/${userId}`);\r\n  },\r\n  getStatus(userId){\r\n    return instance.get(`profile/status/${userId}`);\r\n  },\r\n  updateStatus(status){\r\n    return instance.put(`profile/status`,{status: status});\r\n  }\r\n}\r\n\r\n// export const getUsers = (currentPage ,pageSize)=>{\r\n\r\n//    return instance\r\n//       .get(\r\n//         `users?page=${currentPage}&count=${pageSize}`,{withCredentials:true}\r\n//       ).then(response=>response.data)\r\n// }\r\n","module.exports = __webpack_public_path__ + \"static/media/45.2d4eb21c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"navbar_nav__1IOSw\",\"item\":\"navbar_item__31OO1\",\"activeLink\":\"navbar_activeLink__2ODV1\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./navbar.module.css\";\r\nlet Navbar = () => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={s.item}>\r\n        <NavLink activeClassName={s.activeLink} to=\"/Profile\">\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink activeClassName={s.activeLink} to=\"/Dialogs\">\r\n          Messges\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink activeClassName={s.activeLink} to=\"/News\">\r\n          News\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink activeClassName={s.activeLink} to=\"/Music\">\r\n          Music\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink activeClassName={s.activeLink} to=\"/Settings\">\r\n          Setting\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink activeClassName={s.activeLink} to=\"/users\">\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import {\r\n  stopSubmit\r\n} from \"redux-form\";\r\nimport {\r\n  authAPI\r\n} from \"../API/api\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n\r\n  id: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false\r\n\r\n  // ** isFetching:false\r\n\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n\r\n      }\r\n\r\n      default:\r\n        return state;\r\n  }\r\n};\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  payload: {\r\n    id,\r\n    email,\r\n    login,\r\n    isAuth\r\n  }\r\n})\r\n\r\nexport const me = () => async (dispatch) => {\r\n  let response = await authAPI.me()\r\n  if (response.data.resultCode === 0) {\r\n    let {\r\n      id,\r\n      email,\r\n      login\r\n    } = response.data.data\r\n    dispatch(setAuthUserData(id, email, login, true))\r\n  }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n  let response = await authAPI.login(email, password, rememberMe)\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(me())\r\n  } else {\r\n    let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some Error\"\r\n    dispatch(stopSubmit(\"Login\", {\r\n      _error: message\r\n    }))\r\n  }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  let response = await authAPI.logout()\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false))\r\n  }\r\n}\r\n\r\n\r\nexport default authReducer;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./header.module.css\";\r\n\r\nlet Header = (props) => {\r\n  return (\r\n    <header className = {s.header}>\r\n    <img src=\"https://w0.pngwave.com/png/100/1021/intel-png-clip-art.png\" alt=\"\"/>\r\n    <div className = {s.loginBlock}>\r\n      {props.isAuth ? <div>{props.login}\r\n        - <button onClick={props.logout}>Log Out</button>\r\n       </div> \r\n      :<NavLink to={'/login'}>login</NavLink>}\r\n      \r\n    </div>\r\n  </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout, me, setAuthUserData } from \"../../Redux/auth-reducer\";\r\nimport Header from \"./header\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    // componentDidMount(){\r\n        \r\n    //     this.props.me()\r\n    // }\r\n  render() {\r\n    \r\n    return <Header {...this.props}/>\r\n  };\r\n};\r\nconst mapStateToProps = (state) =>({\r\n  isAuth:state.auth.isAuth,\r\n  login:state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps,{setAuthUserData,me,\r\nlogout\r\n})(HeaderContainer) \r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { login, logout } from '../../Redux/auth-reducer'\r\nimport { required } from '../../utils/validators/validator'\r\nimport { Input } from '../common/FormControls/FormContols'\r\nimport s from '../common/FormControls/FormContols.module.css'\r\nconst LoginForm = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={props.handleSubmit} >\r\n                <div>\r\n                    <Field type=\"text\" placeholder={\"Login\"}\r\n                        component={Input}\r\n                        validate={[required]}\r\n                        name={\"email\"}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Field type=\"password\" placeholder={\"Password\"}\r\n                        component={Input}\r\n                        validate={[required]}\r\n                        name={\"password\"}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Field type={\"checkbox\"}\r\n                        name={\"rememberMe\"}\r\n                        component={Input}\r\n                    /> remeber me\r\n                </div>\r\n                {props.error &&\r\n                    <div className={s.formSummaryError}>\r\n                        {props.error}\r\n                    </div>}\r\n                <div>\r\n                    <button>Log In</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm(\r\n    {\r\n        form: \"Login\"\r\n    }\r\n)(LoginForm)\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    return (\r\n        <>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, { login, logout })(Login)","import { me } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n\r\n    initialized: false\r\n\r\n\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS })\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n     let promise =   dispatch(me())\r\n     \r\n     promise.then(()=>{\r\n        dispatch(initializedSuccess())\r\n     })\r\n        \r\n    }\r\n}\r\nexport default appReducer;\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport  thunkMiddleware from \"redux-thunk\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport dialogsReducer from \"./dialogs_reducer\";\r\nimport profileReducer from \"./profile_reducer\";\r\nimport usersReducer from \"./users_reducer\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app_reducer\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    DialogsPage: dialogsReducer,\r\n    usersPage:usersReducer,\r\n    auth:authReducer,\r\n    form:formReducer,\r\n    app:appReducer\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(applyMiddleware(thunkMiddleware)\r\n  ));\r\n\r\n// let store = createStore(reducers,applyMiddleware(thunkMiddleware));\r\nwindow.___store____ = store\r\nexport default store;\r\n","import React, { Suspense } from \"react\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {  Route, withRouter } from \"react-router-dom\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/login/login\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { initializeApp } from \"./Redux/app_reducer\";\r\nimport Preloader from \"./components/Preloader/Preloader\";\r\nimport store from \"./Redux/redux_store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nconst ProfileContiner =  React.lazy(() => import(\"./components/Profile/Profile_Container\"))\r\nconst DialogsContainer =  React.lazy(() => import(\"./components/Dialogs/Dialogs_container\"))\r\nconst UsersContainer =  React.lazy(() => import(\"./components/Users/Users_Container\"))\r\n\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n\r\n    this.props.initializeApp()\r\n\r\n  }\r\n  render() {\r\n    if (!this.props.initialized) {\r\n\r\n      return <Preloader />\r\n    }\r\n\r\n\r\n    return  <div className=\"app_wrapper\">\r\n          <HeaderContainer />\r\n          <Navbar />\r\n          <div className=\"app_wrapper_content\">\r\n            <Route path=\"/Dialogs\" render={() => \r\n             <Suspense fallback = {<div>Loading...</div>}>\r\n            <DialogsContainer />\r\n            </Suspense>\r\n            \r\n          } />\r\n            <Route path=\"/Profile/:userId?\" render={() => \r\n            <Suspense fallback = {<div>Loading...</div>}>\r\n            <ProfileContiner /> \r\n            </Suspense>\r\n            } />\r\n            <Route path=\"/users\" render={() =>\r\n              <Suspense fallback = {<div>Loading...</div>}>\r\n              <UsersContainer />\r\n              </Suspense>\r\n              } />\r\n            <Route path=\"/login\" render={() => <Login />} />\r\n          </div>\r\n        </div>\r\n\r\n  };\r\n};\r\nconst mapStateToProps = state => ({\r\n\r\n  initialized: state.app.initialized\r\n})\r\nconst AppContainer =  compose\r\n  (withRouter,\r\n    connect(mapStateToProps, { initializeApp }))(App);\r\n\r\n const JSAPP = (props)=>{\r\n  return <BrowserRouter>\r\n             <Provider store={store}>\r\n                    <AppContainer />\r\n               </Provider>\r\n          </BrowserRouter>\r\n}\r\nexport default JSAPP\r\n/*\r\ngitk --all&\r\n*/\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport JSAPP from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from \"./Redux/redux_store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <JSAPP />,document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n/* addPost={store.addPost.bind(store)} updateNewPostText = {store.updateNewPostText.bind(store)}*/\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormContols_formControl__4Nqn3\",\"error\":\"FormContols_error__2eB8S\",\"formSummaryError\":\"FormContols_formSummaryError__3xHnB\"};","import React from 'react'\r\nimport s from './FormContols.module.css'\r\n\r\nexport const Textarea = ({input,meta,...props}) => {\r\n    const hasError = meta.touched && meta.error \r\n    return (\r\n        <div className = {s.formControl + ' ' + ( hasError ? s.error : '')}>\r\n            <div>\r\n            <textarea\r\n                {...input} {...props}\r\n            />\r\n            </div>\r\n           {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input,meta,...props}) => {\r\n    const hasError = meta.touched && meta.error \r\n    return (\r\n        <div className = {s.formControl + ' ' + ( hasError ? s.error : '')}>\r\n            <div>\r\n            <input\r\n                {...input} {...props}\r\n            />\r\n            </div>\r\n           {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","export const required = value => {\r\n    if(value){\r\n\r\n        return undefined\r\n    }\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator =(maxLength)=> (value)=>{\r\n    if(value.length > maxLength) return `Max length is ${maxLength}  Symbols`;\r\n    return undefined;\r\n \r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3RqwT\",\"loginBlock\":\"header_loginBlock__itwiH\"};","import React from 'react'\r\nimport preloader from '../../assets/images/45.svg'\r\nlet Preloader= (props)=>{\r\n\r\n    return<div>\r\n         <img src={preloader} alt=\"\"/> \r\n         </div>\r\n}\r\n\r\nexport default Preloader;","import {\r\n  profileApi,\r\n  usersApi\r\n} from \"../API/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\n\r\nlet initialState = {\r\n  posts: [{\r\n      id: 1,\r\n      message: \"HI\",\r\n      likesCount: 11\r\n    },\r\n    {\r\n      id: 2,\r\n      message: \"first Post\",\r\n      likesCount: 12\r\n    },\r\n    {\r\n      id: 3,\r\n      message: \"Second Post\",\r\n      likesCount: 55\r\n    },\r\n  ],\r\n  newPostText: \"newsocial.com\",\r\n  profile: null,\r\n  status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let newPost = {\r\n        id: 5,\r\n        message: action.post,\r\n        likesCount: 0,\r\n      };\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n        newPostText: \"\"\r\n      }\r\n\r\n    }\r\n\r\n    case SET_USER_PROFILE: {\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      }\r\n\r\n    }\r\n    case SET_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPostActionCreator = (post) => ({\r\n  type: ADD_POST,\r\n  post\r\n});\r\nexport const setStatus = (status) => ({\r\n  type: SET_STATUS,\r\n  status\r\n});\r\n\r\n\r\nexport const setUserProfile = (profile) => ({\r\n  type: SET_USER_PROFILE,\r\n  profile\r\n});\r\n\r\nexport const getProfile = (profile) => async (dispatch) => {\r\n  let response = await usersApi.getProfile(profile)\r\n  dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n let response = await profileApi.getStatus(userId)\r\n      dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  let response = await profileApi.updateStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n          dispatch(setStatus(status))\r\n        }\r\n  }\r\n\r\nexport default profileReducer;\r\n"],"sourceRoot":""}