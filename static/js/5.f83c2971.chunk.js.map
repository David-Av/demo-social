{"version":3,"sources":["components/Hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogPerson/DialogPerson.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/Dialogs_container.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogPerson","className","s","dialog","id","name","Message","message","maxLength","maxLengthCreator","AddmessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","rows","cols","placeholder","Dialogs","dialogsDataM","dialogsData","map","person","key","messagesDataM","messagesData","m","dialogs","dialog_items","messages","values","addMessage","newMessageBody","DialogsContainer","compose","DialogsPage","dispatch","addMessageActionCreator"],"mappings":"uMAIIA,EAA6B,SAACC,GAAD,MAAW,CACxCC,OAAOD,EAAME,KAAKD,SAETE,EAAmB,SAACC,GAAa,IACpCC,EADmC,uKAGjC,OAAIC,KAAKC,MAAMN,OACR,kBAAEG,EAAcE,KAAKC,OADE,kBAAC,IAAD,CAAUC,GAAI,eAHX,GACTC,IAAML,WAOtC,OADqCM,YAAQX,EAARW,CAAoCL,K,oBCb7EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,SAAW,4B,yJCQ5FC,EALM,SAACN,GACtB,OAAO,yBAAKO,UAAWC,IAAEC,QAAQ,kBAAC,IAAD,CAASR,GAAE,mBAAgBD,EAAMU,KAAOV,EAAMW,QCKhEC,EANC,SAACZ,GACb,OACA,yBAAKO,UAAWC,IAAEK,SAAUb,EAAMa,UCwBhCC,EAAYC,YAAiB,KAgB7BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAfL,SAACjB,GAEtB,OAAQ,0BAAMmB,SAAUnB,EAAMoB,cAC5B,6BACE,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAChBC,SAAY,CAACC,IAASX,GACxBH,KAAK,iBACHe,KAAK,IAAIC,KAAK,KACdC,YAAY,QAEd,oDAMSC,EArCC,SAAC7B,GAEf,IAAI8B,EAAe9B,EAAMP,MAAMsC,YAAYC,KAAI,SAACC,GAAD,OAC7C,kBAAC,EAAD,CAActB,KAAMsB,EAAOtB,KAAMD,GAAIuB,EAAOvB,GAAIwB,IAAKD,EAAOvB,QAE1DyB,EAAgBnC,EAAMP,MAAM2C,aAAaJ,KAAI,SAACK,GAAD,OAC/C,kBAAC,EAAD,CAASxB,QAASwB,EAAExB,QAASqB,IAAKG,EAAE3B,QAMtC,OACE,yBAAKH,UAAWC,IAAE8B,SAChB,yBAAK/B,UAAWC,IAAE+B,cAAeT,GACjC,yBAAKvB,UAAWC,IAAEgC,UAAWL,GAC7B,kBAACnB,EAAD,CAAqBG,SARL,SAACsB,GAEnBzC,EAAM0C,WAAWD,EAAOE,qBCEtBC,EAAmBC,YACvB1C,aAdoB,SAACV,GACrB,MAAO,CACLA,MAAOA,EAAMqD,gBAGQ,SAACC,GACxB,MAAO,CACLL,WAAY,SAACC,GACXI,EAASC,YAAwBL,SAOrC/C,IAFuBiD,CAGvBhB,GACae","file":"static/js/5.f83c2971.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nlet mapStateToPropsForRedirect = (state) =>({\r\n    isAuth:state.auth.isAuth\r\n  })\r\nexport const withAuthRedirect = (Component)=>{\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            if(!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n            return < Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__x-shV\",\"dialog_item\":\"Dialogs_dialog_item__2svWL\",\"messages\":\"Dialogs_messages__oWjPR\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst DialogPerson = (props) =>{\r\nreturn <div className={s.dialog}><NavLink to = {`/dialogs/${props.id}`}>{props.name}</NavLink></div>\r\n}\r\n\r\n\r\nexport default DialogPerson;\r\n","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\nconst Message = (props) =>{\r\n    return (\r\n    <div className={s.message}>{props.message}</div> \r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validator\";\r\nimport { Textarea } from \"../common/FormControls/FormContols\";\r\nimport DialogPerson from \"./DialogPerson/DialogPerson\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let dialogsDataM = props.state.dialogsData.map((person) => (\r\n    <DialogPerson name={person.name} id={person.id} key={person.id} />\r\n  ));\r\n  let messagesDataM = props.state.messagesData.map((m) => (\r\n    <Message message={m.message} key={m.id} />\r\n  ));\r\n  let addNewMessage = (values) => {\r\n\r\n    props.addMessage(values.newMessageBody)\r\n  }\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialog_items}>{dialogsDataM}</div>\r\n      <div className={s.messages}>{messagesDataM}</div>\r\n      <AddmessageFormRedux onSubmit={addNewMessage} />\r\n    </div>\r\n  );\r\n};\r\nconst maxLength = maxLengthCreator(100)\r\nconst AddmessageForm = (props) => {\r\n\r\n  return (<form onSubmit={props.handleSubmit}>\r\n    <div>\r\n      <Field component={Textarea} \r\n        validate = {[required,maxLength]}\r\n      name=\"newMessageBody\"\r\n        rows=\"3\" cols=\"15\"\r\n        placeholder='gra'\r\n      />\r\n      <button >Add Message</button>\r\n    </div>\r\n  </form>\r\n  )\r\n}\r\nconst AddmessageFormRedux = reduxForm({ form: \"DialogAddmessageForm\" })(AddmessageForm)\r\nexport default Dialogs;\r\n","import React from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from 'redux';\r\nimport {\r\n  addMessageActionCreator,\r\n  \r\n} from \"../../Redux/dialogs_reducer\";\r\nimport { withAuthRedirect } from '../Hoc/withAuthRedirect';\r\nimport Dialogs from \"./Dialogs\";\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    state: state.DialogsPage,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (newMessageBody) => {\r\n      dispatch(addMessageActionCreator(newMessageBody));\r\n    },\r\n\r\n  };\r\n};\r\nconst DialogsContainer = compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)\r\nexport default DialogsContainer;\r\n"],"sourceRoot":""}